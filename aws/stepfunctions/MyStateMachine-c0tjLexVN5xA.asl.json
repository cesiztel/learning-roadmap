{
  "Comment": "An example of the Amazon States Language using an AWS Lambda function",
  "StartAt": "AddUser",
  "States": {
    "AddUser": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-2:756525791342:function:first-step-functions-example-UserDataFunction-6SDC5BQNVE38",
      "OutputPath": "$.data",
      "Next": "AddOrder"
    },
    "AddOrder": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-2:756525791342:function:first-step-functions-example-OrderDataFunction-5WULZJE29C7E",
      "OutputPath": "$.data",
      "Next": "ApplyDiscounts"
    },
    "ApplyDiscounts": {
      "Type": "Map",
      "InputPath": "$.order",
      "ItemsPath": "$.products",
      "MaxConcurrency": 0,
      "Iterator": {
        "StartAt": "ApplyDiscount",
        "States": {
          "ApplyDiscount": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:eu-west-2:756525791342:function:first-step-functions-exampl-ApplyDiscountsFunction-QNIQUF9U3SG5",
            "End": true
          }
        }
      },
      "ResultPath": "$.order.products",
      "Next": "ChannelTypeChoice"
    },
    "ChannelTypeChoice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.channel",
          "StringEquals": "sms",
          "Next": "SendInvoiceBySMS"
        }
      ],
      "Default": "SendInvoiceByEmail"
    },
    "SendInvoiceBySMS": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-2:756525791342:function:first-step-functions-example-MyLambdaFunction-10RV2KU84D5OV",
      "End": true
    },
    "SendInvoiceByEmail": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-2:756525791342:function:first-step-functions-example-MyLambdaFunction-10RV2KU84D5OV",
      "End": true
    }
  }
}